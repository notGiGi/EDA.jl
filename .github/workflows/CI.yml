name: Continuous Integration

on:
  push:
    branches:
      - main
    tags: ['*']
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Julia CI - ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    permissions:
      actions: write
      contents: read
    strategy:
      fail-fast: true
      matrix:
        version:
          - '1.11'
          - 'nightly'
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-buildpkg@v1
      - name: Check installed versions
        run: julia --project=. -e 'using Pkg; Pkg.status()'
      - name: Run tests with coverage
        run: julia --project=. -e 'using Pkg; Pkg.test(coverage=true)'
      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.arch == 'x64'
        run: julia --project=. -e 'using Coverage; Codecov.submit(process_folder())'

  format:
    name: Julia Code Format Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1.11'
      - name: Install dependencies
        run: julia --project=. -e 'using Pkg; Pkg.instantiate()'
      - name: Check installed versions
        run: julia --project=. -e 'using Pkg; Pkg.status()'
      - name: Run JuliaFormatter
        run: julia --project=. -e 'using JuliaFormatter; format(".")'
